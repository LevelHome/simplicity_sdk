project_name: ot-ncp-mtd
label: OpenThread - NCP (MTD)
package: OpenThread
description:  >
  This is a simple OpenThread Minimal Thread Device NCP application. This is equivalent to the ot-ncp-mtd application in the OpenThread GitHub repo.
category: OpenThread Examples
quality: experimental

component:
  - id: ot_stack_mtd
  - id: ot_ncp_source
  - id: ot_crash_handler
  - id: iostream_usart
    instance:
      - vcom
    condition:
      - device_series_2
  - id: iostream_eusart
    instance:
      - vcom
    condition:
      - device_series_3
  - id: rail_util_pti
  - id: bootloader_interface
  - id: ot_rtt_log
  - id: clock_manager
  # Platform - Enable LTO for gcc by installing the following component
  # - id: toolchain_gcc_lto

include:
  - path: .
    file_list:
    - path: app.h
  - path: ../../../../util/third_party/openthread/src/lib/platform
    file_list:
    - path: reset_util.h

source:
  - path: main.c
  - path: app.c
  
configuration:
  - name: SL_BOARD_ENABLE_VCOM
    value: 1
  - name: SL_MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
    value: 1
  - name: SL_MBEDTLS_KEY_EXCHANGE_PSK_ENABLED
    value: 1
  - name: OPENTHREAD_CONFIG_LOG_OUTPUT
    value: OPENTHREAD_CONFIG_LOG_OUTPUT_PLATFORM_DEFINED
    condition: [ot_rtt_log]
  - name: BUFFER_SIZE_UP
    value: 768
    condition: [ot_rtt_log]
  - name: BUFFER_SIZE_DOWN
    value: 0
    condition: [ot_rtt_log]
  - name: CIRCULAR_QUEUE_LEN_MAX
    value: 16
  - name: SL_IOSTREAM_USART_VCOM_FLOW_CONTROL_TYPE
    value: usartHwFlowControlCtsAndRts
    condition: [iostream_usart]
  - name: SL_IOSTREAM_EUSART_VCOM_FLOW_CONTROL_TYPE
    value: SL_IOSTREAM_EUSART_UART_FLOW_CTRL_CTS_RTS
    condition: [iostream_eusart]

tag:
  - prebuilt_demo

readme:
  - path: ./README-OT-NCP.md

filter:
  - name: "Wireless Technology"
    value: ["Thread"]
  - name: "Device Type"
    value: ["NCP"]
  - name: "Project Difficulty"
    value: ["Advanced"]

ui_hints:
  highlight:
    - path: ./README-OT-NCP.md
      focus: true
