<?xml version="1.0" encoding="UTF-8"?>
<demos xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:model="http://www.silabs.com/ss/Studio.ecore" xsi:noNamespaceSchemaLocation="http://www.silabs.com/ss/Demo.ecore">
  <demo name="brd2603a.demo.zwave_ncp_serial_api_controller.eu_v255" label="Z-Wave - NCP Serial API Controller (Default Region v255)">
    <model:description>This variant of demo is created for testing OTW update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Applications Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be a PC or a less powerful embedded host CPU, such as in a remote control or in a gateway device, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd2603a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_serial_api/README.md"/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_ncp_serial_api_controller.eu_v255" label="Z-Wave - NCP Serial API Controller (Default Region v255)">
    <model:description>This variant of demo is created for testing OTW update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Applications Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be a PC or a less powerful embedded host CPU, such as in a remote control or in a gateway device, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd2705a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_serial_api/README.md"/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_ncp_serial_api_controller.eu_v255" label="Z-Wave - NCP Serial API Controller (Default Region v255)">
    <model:description>This variant of demo is created for testing OTW update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Applications Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be a PC or a less powerful embedded host CPU, such as in a remote control or in a gateway device, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4204c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_serial_api/README.md"/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_ncp_serial_api_controller.eu_v255" label="Z-Wave - NCP Serial API Controller (Default Region v255)">
    <model:description>This variant of demo is created for testing OTW update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Applications Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be a PC or a less powerful embedded host CPU, such as in a remote control or in a gateway device, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4204d-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_serial_api/README.md"/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_ncp_serial_api_controller.eu_v255" label="Z-Wave - NCP Serial API Controller (Default Region v255)">
    <model:description>This variant of demo is created for testing OTW update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Applications Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be a PC or a less powerful embedded host CPU, such as in a remote control or in a gateway device, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4205a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_serial_api/README.md"/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_ncp_serial_api_controller.eu_v255" label="Z-Wave - NCP Serial API Controller (Default Region v255)">
    <model:description>This variant of demo is created for testing OTW update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Applications Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be a PC or a less powerful embedded host CPU, such as in a remote control or in a gateway device, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4205b-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_serial_api/README.md"/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_ncp_serial_api_controller.eu_v255" label="Z-Wave - NCP Serial API Controller (Default Region v255)">
    <model:description>This variant of demo is created for testing OTW update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Applications Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be a PC or a less powerful embedded host CPU, such as in a remote control or in a gateway device, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4210a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_serial_api/README.md"/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_ncp_serial_api_controller.eu_v255" label="Z-Wave - NCP Serial API Controller (Default Region v255)">
    <model:description>This variant of demo is created for testing OTW update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Applications Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be a PC or a less powerful embedded host CPU, such as in a remote control or in a gateway device, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4400c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_serial_api/README.md"/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_ncp_serial_api_controller.eu_v255" label="Z-Wave - NCP Serial API Controller (Default Region v255)">
    <model:description>This variant of demo is created for testing OTW update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Applications Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be a PC or a less powerful embedded host CPU, such as in a remote control or in a gateway device, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4401c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_serial_api/README.md"/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (Default Region)">
    <model:description>IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Applications Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be a PC or a less powerful embedded host CPU, such as in a remote control or in a gateway device, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd2603a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_serial_api/README.md"/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (Default Region)">
    <model:description>IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Applications Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be a PC or a less powerful embedded host CPU, such as in a remote control or in a gateway device, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd2705a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_serial_api/README.md"/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (Default Region)">
    <model:description>IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Applications Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be a PC or a less powerful embedded host CPU, such as in a remote control or in a gateway device, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4204c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_serial_api/README.md"/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (Default Region)">
    <model:description>IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Applications Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be a PC or a less powerful embedded host CPU, such as in a remote control or in a gateway device, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4204d-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_serial_api/README.md"/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (Default Region)">
    <model:description>IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Applications Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be a PC or a less powerful embedded host CPU, such as in a remote control or in a gateway device, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4205a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_serial_api/README.md"/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (Default Region)">
    <model:description>IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Applications Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be a PC or a less powerful embedded host CPU, such as in a remote control or in a gateway device, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4205b-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_serial_api/README.md"/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (Default Region)">
    <model:description>IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Applications Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be a PC or a less powerful embedded host CPU, such as in a remote control or in a gateway device, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4210a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_serial_api/README.md"/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (Default Region)">
    <model:description>IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Applications Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be a PC or a less powerful embedded host CPU, such as in a remote control or in a gateway device, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4400c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_serial_api/README.md"/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_ncp_serial_api_controller.eu" label="Z-Wave - NCP Serial API Controller (Default Region)">
    <model:description>IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Applications Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be a PC or a less powerful embedded host CPU, such as in a remote control or in a gateway device, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API Controller (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_controller/zwave_ncp_serial_api_controller-brd4401c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_serial_api/README.md"/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/controller-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_ncp_serial_api_end_device.eu_v255" label="Z-Wave - NCP Serial API End Device (Default Region v255)">
    <model:description>This variant of demo is created for testing OTW update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Application Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be PC or a less powerful embedded host CPU, e.g., in a remote control or in a gateway device.
The Serial API End Device allows the user to create a product with a host application with different capabilites than the Z-Wave device, such as drive a high performance display, but does not require the Z-Wave Controller role.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd2603a-eu_v255.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_ncp_serial_api_end_device.eu_v255" label="Z-Wave - NCP Serial API End Device (Default Region v255)">
    <model:description>This variant of demo is created for testing OTW update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Application Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be PC or a less powerful embedded host CPU, e.g., in a remote control or in a gateway device.
The Serial API End Device allows the user to create a product with a host application with different capabilites than the Z-Wave device, such as drive a high performance display, but does not require the Z-Wave Controller role.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd2705a-eu_v255.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_ncp_serial_api_end_device.eu_v255" label="Z-Wave - NCP Serial API End Device (Default Region v255)">
    <model:description>This variant of demo is created for testing OTW update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Application Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be PC or a less powerful embedded host CPU, e.g., in a remote control or in a gateway device.
The Serial API End Device allows the user to create a product with a host application with different capabilites than the Z-Wave device, such as drive a high performance display, but does not require the Z-Wave Controller role.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4204c-eu_v255.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_ncp_serial_api_end_device.eu_v255" label="Z-Wave - NCP Serial API End Device (Default Region v255)">
    <model:description>This variant of demo is created for testing OTW update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Application Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be PC or a less powerful embedded host CPU, e.g., in a remote control or in a gateway device.
The Serial API End Device allows the user to create a product with a host application with different capabilites than the Z-Wave device, such as drive a high performance display, but does not require the Z-Wave Controller role.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4204d-eu_v255.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_ncp_serial_api_end_device.eu_v255" label="Z-Wave - NCP Serial API End Device (Default Region v255)">
    <model:description>This variant of demo is created for testing OTW update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Application Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be PC or a less powerful embedded host CPU, e.g., in a remote control or in a gateway device.
The Serial API End Device allows the user to create a product with a host application with different capabilites than the Z-Wave device, such as drive a high performance display, but does not require the Z-Wave Controller role.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4205a-eu_v255.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_ncp_serial_api_end_device.eu_v255" label="Z-Wave - NCP Serial API End Device (Default Region v255)">
    <model:description>This variant of demo is created for testing OTW update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Application Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be PC or a less powerful embedded host CPU, e.g., in a remote control or in a gateway device.
The Serial API End Device allows the user to create a product with a host application with different capabilites than the Z-Wave device, such as drive a high performance display, but does not require the Z-Wave Controller role.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4205b-eu_v255.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_ncp_serial_api_end_device.eu_v255" label="Z-Wave - NCP Serial API End Device (Default Region v255)">
    <model:description>This variant of demo is created for testing OTW update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Application Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be PC or a less powerful embedded host CPU, e.g., in a remote control or in a gateway device.
The Serial API End Device allows the user to create a product with a host application with different capabilites than the Z-Wave device, such as drive a high performance display, but does not require the Z-Wave Controller role.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4210a-eu_v255.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_ncp_serial_api_end_device.eu_v255" label="Z-Wave - NCP Serial API End Device (Default Region v255)">
    <model:description>This variant of demo is created for testing OTW update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Application Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be PC or a less powerful embedded host CPU, e.g., in a remote control or in a gateway device.
The Serial API End Device allows the user to create a product with a host application with different capabilites than the Z-Wave device, such as drive a high performance display, but does not require the Z-Wave Controller role.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4400c-eu_v255.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_ncp_serial_api_end_device.eu_v255" label="Z-Wave - NCP Serial API End Device (Default Region v255)">
    <model:description>This variant of demo is created for testing OTW update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Application Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be PC or a less powerful embedded host CPU, e.g., in a remote control or in a gateway device.
The Serial API End Device allows the user to create a product with a host application with different capabilites than the Z-Wave device, such as drive a high performance display, but does not require the Z-Wave Controller role.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4401c-eu_v255.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_ncp_serial_api_end_device.eu" label="Z-Wave - NCP Serial API End Device (Default Region)">
    <model:description>IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Application Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be PC or a less powerful embedded host CPU, e.g., in a remote control or in a gateway device.
The Serial API End Device allows the user to create a product with a host application with different capabilites than the Z-Wave device, such as drive a high performance display, but does not require the Z-Wave Controller role.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd2603a-eu.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_ncp_serial_api_end_device.eu" label="Z-Wave - NCP Serial API End Device (Default Region)">
    <model:description>IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Application Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be PC or a less powerful embedded host CPU, e.g., in a remote control or in a gateway device.
The Serial API End Device allows the user to create a product with a host application with different capabilites than the Z-Wave device, such as drive a high performance display, but does not require the Z-Wave Controller role.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd2705a-eu.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_ncp_serial_api_end_device.eu" label="Z-Wave - NCP Serial API End Device (Default Region)">
    <model:description>IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Application Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be PC or a less powerful embedded host CPU, e.g., in a remote control or in a gateway device.
The Serial API End Device allows the user to create a product with a host application with different capabilites than the Z-Wave device, such as drive a high performance display, but does not require the Z-Wave Controller role.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4204c-eu.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_ncp_serial_api_end_device.eu" label="Z-Wave - NCP Serial API End Device (Default Region)">
    <model:description>IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Application Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be PC or a less powerful embedded host CPU, e.g., in a remote control or in a gateway device.
The Serial API End Device allows the user to create a product with a host application with different capabilites than the Z-Wave device, such as drive a high performance display, but does not require the Z-Wave Controller role.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4204d-eu.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_ncp_serial_api_end_device.eu" label="Z-Wave - NCP Serial API End Device (Default Region)">
    <model:description>IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Application Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be PC or a less powerful embedded host CPU, e.g., in a remote control or in a gateway device.
The Serial API End Device allows the user to create a product with a host application with different capabilites than the Z-Wave device, such as drive a high performance display, but does not require the Z-Wave Controller role.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4205a-eu.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_ncp_serial_api_end_device.eu" label="Z-Wave - NCP Serial API End Device (Default Region)">
    <model:description>IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Application Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be PC or a less powerful embedded host CPU, e.g., in a remote control or in a gateway device.
The Serial API End Device allows the user to create a product with a host application with different capabilites than the Z-Wave device, such as drive a high performance display, but does not require the Z-Wave Controller role.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4205b-eu.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_ncp_serial_api_end_device.eu" label="Z-Wave - NCP Serial API End Device (Default Region)">
    <model:description>IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Application Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be PC or a less powerful embedded host CPU, e.g., in a remote control or in a gateway device.
The Serial API End Device allows the user to create a product with a host application with different capabilites than the Z-Wave device, such as drive a high performance display, but does not require the Z-Wave Controller role.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4210a-eu.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_ncp_serial_api_end_device.eu" label="Z-Wave - NCP Serial API End Device (Default Region)">
    <model:description>IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Application Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be PC or a less powerful embedded host CPU, e.g., in a remote control or in a gateway device.
The Serial API End Device allows the user to create a product with a host application with different capabilites than the Z-Wave device, such as drive a high performance display, but does not require the Z-Wave Controller role.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4400c-eu.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_ncp_serial_api_end_device.eu" label="Z-Wave - NCP Serial API End Device (Default Region)">
    <model:description>IMPORTANT: By SerialAPI Application, the region is selected by the Host application.
 The Serial Application Programming Interface (Serial API) allows a host to communicate with a Z-Wave chip. The host may be PC or a less powerful embedded host CPU, e.g., in a remote control or in a gateway device.
The Serial API End Device allows the user to create a product with a host application with different capabilites than the Z-Wave device, such as drive a high performance display, but does not require the Z-Wave Controller role.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Serial API End Device (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_serial_api_end_device/zwave_ncp_serial_api_end_device-brd4401c-eu.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_ncp_zniffer.eu" label="Z-Wave - NCP Zniffer Beta (Default Region)">
    <model:description>IMPORTANT: By the NCP Zniffer Application, the region is selected by the Host application. The Z-Wave Zniffer Application</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Zniffer Beta (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_zniffer/zwave_ncp_zniffer-brd2603a-eu.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_ncp_zniffer.eu" label="Z-Wave - NCP Zniffer Beta (Default Region)">
    <model:description>IMPORTANT: By the NCP Zniffer Application, the region is selected by the Host application. The Z-Wave Zniffer Application</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Zniffer Beta (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_zniffer/zwave_ncp_zniffer-brd2705a-eu.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_ncp_zniffer.eu" label="Z-Wave - NCP Zniffer Beta (Default Region)">
    <model:description>IMPORTANT: By the NCP Zniffer Application, the region is selected by the Host application. The Z-Wave Zniffer Application</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Zniffer Beta (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_zniffer/zwave_ncp_zniffer-brd4204c-eu.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_ncp_zniffer.eu" label="Z-Wave - NCP Zniffer Beta (Default Region)">
    <model:description>IMPORTANT: By the NCP Zniffer Application, the region is selected by the Host application. The Z-Wave Zniffer Application</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Zniffer Beta (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_zniffer/zwave_ncp_zniffer-brd4204d-eu.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_ncp_zniffer.eu" label="Z-Wave - NCP Zniffer Beta (Default Region)">
    <model:description>IMPORTANT: By the NCP Zniffer Application, the region is selected by the Host application. The Z-Wave Zniffer Application</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Zniffer Beta (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_zniffer/zwave_ncp_zniffer-brd4205a-eu.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_ncp_zniffer.eu" label="Z-Wave - NCP Zniffer Beta (Default Region)">
    <model:description>IMPORTANT: By the NCP Zniffer Application, the region is selected by the Host application. The Z-Wave Zniffer Application</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Zniffer Beta (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_zniffer/zwave_ncp_zniffer-brd4205b-eu.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_ncp_zniffer.eu" label="Z-Wave - NCP Zniffer Beta (Default Region)">
    <model:description>IMPORTANT: By the NCP Zniffer Application, the region is selected by the Host application. The Z-Wave Zniffer Application</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Zniffer Beta (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_zniffer/zwave_ncp_zniffer-brd4210a-eu.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_ncp_zniffer.eu" label="Z-Wave - NCP Zniffer Beta (Default Region)">
    <model:description>IMPORTANT: By the NCP Zniffer Application, the region is selected by the Host application. The Z-Wave Zniffer Application</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Zniffer Beta (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_zniffer/zwave_ncp_zniffer-brd4400c-eu.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_ncp_zniffer.eu" label="Z-Wave - NCP Zniffer Beta (Default Region)">
    <model:description>IMPORTANT: By the NCP Zniffer Application, the region is selected by the Host application. The Z-Wave Zniffer Application</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Zniffer Beta (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_zniffer/zwave_ncp_zniffer-brd4401c-eu.hex"/>
    <property key="core.readmeFiles" value=""/>
    <property key="filters" value="Device\ Type|NCP Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_ncp_zniffer_pti.eu" label="Z-Wave - NCP Zniffer PTI (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Zniffer Packet Trace Interface application helps with analyzing the communication between devices and debugging the application. It is possible to log and filter datagrams in any supported region. The log can be saved for later analysis.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Zniffer PTI (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_zniffer_pti/zwave_ncp_zniffer_pti-brd2603a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_zniffer_pti/README.md"/>
    <property key="filters" value="Device\ Type|NCP Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_ncp_zniffer_pti.eu" label="Z-Wave - NCP Zniffer PTI (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Zniffer Packet Trace Interface application helps with analyzing the communication between devices and debugging the application. It is possible to log and filter datagrams in any supported region. The log can be saved for later analysis.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Zniffer PTI (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_zniffer_pti/zwave_ncp_zniffer_pti-brd2705a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_zniffer_pti/README.md"/>
    <property key="filters" value="Device\ Type|NCP Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_ncp_zniffer_pti.eu" label="Z-Wave - NCP Zniffer PTI (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Zniffer Packet Trace Interface application helps with analyzing the communication between devices and debugging the application. It is possible to log and filter datagrams in any supported region. The log can be saved for later analysis.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Zniffer PTI (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_zniffer_pti/zwave_ncp_zniffer_pti-brd4204c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_zniffer_pti/README.md"/>
    <property key="filters" value="Device\ Type|NCP Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_ncp_zniffer_pti.eu" label="Z-Wave - NCP Zniffer PTI (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Zniffer Packet Trace Interface application helps with analyzing the communication between devices and debugging the application. It is possible to log and filter datagrams in any supported region. The log can be saved for later analysis.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Zniffer PTI (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_zniffer_pti/zwave_ncp_zniffer_pti-brd4204d-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_zniffer_pti/README.md"/>
    <property key="filters" value="Device\ Type|NCP Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_ncp_zniffer_pti.eu" label="Z-Wave - NCP Zniffer PTI (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Zniffer Packet Trace Interface application helps with analyzing the communication between devices and debugging the application. It is possible to log and filter datagrams in any supported region. The log can be saved for later analysis.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Zniffer PTI (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_zniffer_pti/zwave_ncp_zniffer_pti-brd4205a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_zniffer_pti/README.md"/>
    <property key="filters" value="Device\ Type|NCP Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_ncp_zniffer_pti.eu" label="Z-Wave - NCP Zniffer PTI (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Zniffer Packet Trace Interface application helps with analyzing the communication between devices and debugging the application. It is possible to log and filter datagrams in any supported region. The log can be saved for later analysis.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Zniffer PTI (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_zniffer_pti/zwave_ncp_zniffer_pti-brd4205b-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_zniffer_pti/README.md"/>
    <property key="filters" value="Device\ Type|NCP Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_ncp_zniffer_pti.eu" label="Z-Wave - NCP Zniffer PTI (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Zniffer Packet Trace Interface application helps with analyzing the communication between devices and debugging the application. It is possible to log and filter datagrams in any supported region. The log can be saved for later analysis.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Zniffer PTI (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_zniffer_pti/zwave_ncp_zniffer_pti-brd4210a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_zniffer_pti/README.md"/>
    <property key="filters" value="Device\ Type|NCP Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_ncp_zniffer_pti.eu" label="Z-Wave - NCP Zniffer PTI (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Zniffer Packet Trace Interface application helps with analyzing the communication between devices and debugging the application. It is possible to log and filter datagrams in any supported region. The log can be saved for later analysis.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Zniffer PTI (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_zniffer_pti/zwave_ncp_zniffer_pti-brd4400c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_zniffer_pti/README.md"/>
    <property key="filters" value="Device\ Type|NCP Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_ncp_zniffer_pti.eu" label="Z-Wave - NCP Zniffer PTI (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Zniffer Packet Trace Interface application helps with analyzing the communication between devices and debugging the application. It is possible to log and filter datagrams in any supported region. The log can be saved for later analysis.
</model:description>
    <property key="demos.blurb" value="Z-Wave - NCP Zniffer PTI (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_ncp_zniffer_pti/zwave_ncp_zniffer_pti-brd4401c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_ncp_zniffer_pti/README.md"/>
    <property key="filters" value="Device\ Type|NCP Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-uart-xmodem-zwave-otw/bootloader-uart-xmodem-zwave-otw-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_door_lock_keypad.eu_v255" label="Z-Wave - SoC Door Lock Keypad (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.
For certain devices, the application supports and uses the User Credential Command Class. See README file for details.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd2603a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_door_lock_keypad/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_soc_door_lock_keypad.eu_v255" label="Z-Wave - SoC Door Lock Keypad (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.
For certain devices, the application supports and uses the User Credential Command Class. See README file for details.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd2705a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_door_lock_keypad/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_door_lock_keypad.eu_v255" label="Z-Wave - SoC Door Lock Keypad (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.
For certain devices, the application supports and uses the User Credential Command Class. See README file for details.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4204c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_door_lock_keypad/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_door_lock_keypad.eu_v255" label="Z-Wave - SoC Door Lock Keypad (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.
For certain devices, the application supports and uses the User Credential Command Class. See README file for details.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4204d-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_door_lock_keypad/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_door_lock_keypad.eu_v255" label="Z-Wave - SoC Door Lock Keypad (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.
For certain devices, the application supports and uses the User Credential Command Class. See README file for details.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4205a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_door_lock_keypad/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_door_lock_keypad.eu_v255" label="Z-Wave - SoC Door Lock Keypad (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.
For certain devices, the application supports and uses the User Credential Command Class. See README file for details.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4205b-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_door_lock_keypad/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_door_lock_keypad.eu_v255" label="Z-Wave - SoC Door Lock Keypad (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.
For certain devices, the application supports and uses the User Credential Command Class. See README file for details.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4210a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_door_lock_keypad/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_soc_door_lock_keypad.eu_v255" label="Z-Wave - SoC Door Lock Keypad (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.
For certain devices, the application supports and uses the User Credential Command Class. See README file for details.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4400c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_door_lock_keypad/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_soc_door_lock_keypad.eu_v255" label="Z-Wave - SoC Door Lock Keypad (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.
For certain devices, the application supports and uses the User Credential Command Class. See README file for details.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4401c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_door_lock_keypad/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_door_lock_keypad.eu" label="Z-Wave - SoC Door Lock Keypad (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.
For certain devices, the application supports and uses the User Credential Command Class. See README file for details.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd2603a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_door_lock_keypad/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_soc_door_lock_keypad.eu" label="Z-Wave - SoC Door Lock Keypad (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.
For certain devices, the application supports and uses the User Credential Command Class. See README file for details.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd2705a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_door_lock_keypad/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_door_lock_keypad.eu" label="Z-Wave - SoC Door Lock Keypad (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.
For certain devices, the application supports and uses the User Credential Command Class. See README file for details.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4204c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_door_lock_keypad/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_door_lock_keypad.eu" label="Z-Wave - SoC Door Lock Keypad (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.
For certain devices, the application supports and uses the User Credential Command Class. See README file for details.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4204d-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_door_lock_keypad/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_door_lock_keypad.eu" label="Z-Wave - SoC Door Lock Keypad (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.
For certain devices, the application supports and uses the User Credential Command Class. See README file for details.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4205a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_door_lock_keypad/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_door_lock_keypad.eu" label="Z-Wave - SoC Door Lock Keypad (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.
For certain devices, the application supports and uses the User Credential Command Class. See README file for details.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4205b-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_door_lock_keypad/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_door_lock_keypad.eu" label="Z-Wave - SoC Door Lock Keypad (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.
For certain devices, the application supports and uses the User Credential Command Class. See README file for details.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4210a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_door_lock_keypad/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_soc_door_lock_keypad.eu" label="Z-Wave - SoC Door Lock Keypad (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.
For certain devices, the application supports and uses the User Credential Command Class. See README file for details.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4400c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_door_lock_keypad/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_soc_door_lock_keypad.eu" label="Z-Wave - SoC Door Lock Keypad (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Door Lock application shows a lock implementation. It will support user codes to open a door and thereby eliminate the need for traditional keys. It is possible to both lock and unlock the door remotely through the Z-Wave protocol.
For certain devices, the application supports and uses the User Credential Command Class. See README file for details.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Door Lock Keypad (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_door_lock_keypad/zwave_soc_door_lock_keypad-brd4401c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_door_lock_keypad/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Advanced Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_led_bulb.eu_v255" label="Z-Wave - SoC LED Bulb (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave LED Bulb application shows an implementation of a remotely controlled color switch. An example is an LED bulb or any other color-capable device. The app supports dimming of an RGB LED.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC LED Bulb (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd2603a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_led_bulb/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_soc_led_bulb.eu_v255" label="Z-Wave - SoC LED Bulb (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave LED Bulb application shows an implementation of a remotely controlled color switch. An example is an LED bulb or any other color-capable device. The app supports dimming of an RGB LED.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC LED Bulb (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd2705a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_led_bulb/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_led_bulb.eu_v255" label="Z-Wave - SoC LED Bulb (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave LED Bulb application shows an implementation of a remotely controlled color switch. An example is an LED bulb or any other color-capable device. The app supports dimming of an RGB LED.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC LED Bulb (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4204c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_led_bulb/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_led_bulb.eu_v255" label="Z-Wave - SoC LED Bulb (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave LED Bulb application shows an implementation of a remotely controlled color switch. An example is an LED bulb or any other color-capable device. The app supports dimming of an RGB LED.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC LED Bulb (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4204d-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_led_bulb/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_led_bulb.eu_v255" label="Z-Wave - SoC LED Bulb (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave LED Bulb application shows an implementation of a remotely controlled color switch. An example is an LED bulb or any other color-capable device. The app supports dimming of an RGB LED.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC LED Bulb (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4205a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_led_bulb/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_led_bulb.eu_v255" label="Z-Wave - SoC LED Bulb (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave LED Bulb application shows an implementation of a remotely controlled color switch. An example is an LED bulb or any other color-capable device. The app supports dimming of an RGB LED.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC LED Bulb (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4205b-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_led_bulb/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_led_bulb.eu_v255" label="Z-Wave - SoC LED Bulb (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave LED Bulb application shows an implementation of a remotely controlled color switch. An example is an LED bulb or any other color-capable device. The app supports dimming of an RGB LED.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC LED Bulb (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4210a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_led_bulb/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_soc_led_bulb.eu_v255" label="Z-Wave - SoC LED Bulb (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave LED Bulb application shows an implementation of a remotely controlled color switch. An example is an LED bulb or any other color-capable device. The app supports dimming of an RGB LED.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC LED Bulb (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4400c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_led_bulb/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_soc_led_bulb.eu_v255" label="Z-Wave - SoC LED Bulb (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave LED Bulb application shows an implementation of a remotely controlled color switch. An example is an LED bulb or any other color-capable device. The app supports dimming of an RGB LED.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC LED Bulb (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4401c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_led_bulb/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_led_bulb.eu" label="Z-Wave - SoC LED Bulb (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave LED Bulb application shows an implementation of a remotely controlled color switch. An example is an LED bulb or any other color-capable device. The app supports dimming of an RGB LED.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC LED Bulb (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd2603a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_led_bulb/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_soc_led_bulb.eu" label="Z-Wave - SoC LED Bulb (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave LED Bulb application shows an implementation of a remotely controlled color switch. An example is an LED bulb or any other color-capable device. The app supports dimming of an RGB LED.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC LED Bulb (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd2705a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_led_bulb/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_led_bulb.eu" label="Z-Wave - SoC LED Bulb (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave LED Bulb application shows an implementation of a remotely controlled color switch. An example is an LED bulb or any other color-capable device. The app supports dimming of an RGB LED.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC LED Bulb (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4204c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_led_bulb/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_led_bulb.eu" label="Z-Wave - SoC LED Bulb (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave LED Bulb application shows an implementation of a remotely controlled color switch. An example is an LED bulb or any other color-capable device. The app supports dimming of an RGB LED.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC LED Bulb (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4204d-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_led_bulb/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_led_bulb.eu" label="Z-Wave - SoC LED Bulb (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave LED Bulb application shows an implementation of a remotely controlled color switch. An example is an LED bulb or any other color-capable device. The app supports dimming of an RGB LED.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC LED Bulb (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4205a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_led_bulb/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_led_bulb.eu" label="Z-Wave - SoC LED Bulb (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave LED Bulb application shows an implementation of a remotely controlled color switch. An example is an LED bulb or any other color-capable device. The app supports dimming of an RGB LED.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC LED Bulb (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4205b-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_led_bulb/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_led_bulb.eu" label="Z-Wave - SoC LED Bulb (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave LED Bulb application shows an implementation of a remotely controlled color switch. An example is an LED bulb or any other color-capable device. The app supports dimming of an RGB LED.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC LED Bulb (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4210a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_led_bulb/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_soc_led_bulb.eu" label="Z-Wave - SoC LED Bulb (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave LED Bulb application shows an implementation of a remotely controlled color switch. An example is an LED bulb or any other color-capable device. The app supports dimming of an RGB LED.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC LED Bulb (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4400c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_led_bulb/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_soc_led_bulb.eu" label="Z-Wave - SoC LED Bulb (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave LED Bulb application shows an implementation of a remotely controlled color switch. An example is an LED bulb or any other color-capable device. The app supports dimming of an RGB LED.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC LED Bulb (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_led_bulb/zwave_soc_led_bulb-brd4401c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_led_bulb/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_multilevel_sensor.eu_v255" label="Z-Wave - SoC Multilevel Sensor (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Switch Multilevel Sensor application shows the ability to advertize numerical sensor readings, such as temperature and humidity, and so on. Multiple parameters can be set for the minimum and maximum values, and a notification will be sent if the measured temperature value is out of the range.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd2603a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_multilevel_sensor/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_soc_multilevel_sensor.eu_v255" label="Z-Wave - SoC Multilevel Sensor (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Switch Multilevel Sensor application shows the ability to advertize numerical sensor readings, such as temperature and humidity, and so on. Multiple parameters can be set for the minimum and maximum values, and a notification will be sent if the measured temperature value is out of the range.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd2705a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_multilevel_sensor/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_multilevel_sensor.eu_v255" label="Z-Wave - SoC Multilevel Sensor (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Switch Multilevel Sensor application shows the ability to advertize numerical sensor readings, such as temperature and humidity, and so on. Multiple parameters can be set for the minimum and maximum values, and a notification will be sent if the measured temperature value is out of the range.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4204c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_multilevel_sensor/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_multilevel_sensor.eu_v255" label="Z-Wave - SoC Multilevel Sensor (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Switch Multilevel Sensor application shows the ability to advertize numerical sensor readings, such as temperature and humidity, and so on. Multiple parameters can be set for the minimum and maximum values, and a notification will be sent if the measured temperature value is out of the range.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4204d-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_multilevel_sensor/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_multilevel_sensor.eu_v255" label="Z-Wave - SoC Multilevel Sensor (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Switch Multilevel Sensor application shows the ability to advertize numerical sensor readings, such as temperature and humidity, and so on. Multiple parameters can be set for the minimum and maximum values, and a notification will be sent if the measured temperature value is out of the range.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4205a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_multilevel_sensor/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_multilevel_sensor.eu_v255" label="Z-Wave - SoC Multilevel Sensor (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Switch Multilevel Sensor application shows the ability to advertize numerical sensor readings, such as temperature and humidity, and so on. Multiple parameters can be set for the minimum and maximum values, and a notification will be sent if the measured temperature value is out of the range.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4205b-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_multilevel_sensor/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_multilevel_sensor.eu_v255" label="Z-Wave - SoC Multilevel Sensor (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Switch Multilevel Sensor application shows the ability to advertize numerical sensor readings, such as temperature and humidity, and so on. Multiple parameters can be set for the minimum and maximum values, and a notification will be sent if the measured temperature value is out of the range.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4210a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_multilevel_sensor/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_soc_multilevel_sensor.eu_v255" label="Z-Wave - SoC Multilevel Sensor (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Switch Multilevel Sensor application shows the ability to advertize numerical sensor readings, such as temperature and humidity, and so on. Multiple parameters can be set for the minimum and maximum values, and a notification will be sent if the measured temperature value is out of the range.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4400c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_multilevel_sensor/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_soc_multilevel_sensor.eu_v255" label="Z-Wave - SoC Multilevel Sensor (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Switch Multilevel Sensor application shows the ability to advertize numerical sensor readings, such as temperature and humidity, and so on. Multiple parameters can be set for the minimum and maximum values, and a notification will be sent if the measured temperature value is out of the range.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4401c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_multilevel_sensor/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_multilevel_sensor.eu" label="Z-Wave - SoC Multilevel Sensor (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Switch Multilevel Sensor application shows the ability to advertize numerical sensor readings, such as temperature and humidity, and so on. Multiple parameters can be set for the minimum and maximum values, and a notification will be sent if the measured temperature value is out of the range.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd2603a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_multilevel_sensor/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_soc_multilevel_sensor.eu" label="Z-Wave - SoC Multilevel Sensor (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Switch Multilevel Sensor application shows the ability to advertize numerical sensor readings, such as temperature and humidity, and so on. Multiple parameters can be set for the minimum and maximum values, and a notification will be sent if the measured temperature value is out of the range.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd2705a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_multilevel_sensor/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_multilevel_sensor.eu" label="Z-Wave - SoC Multilevel Sensor (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Switch Multilevel Sensor application shows the ability to advertize numerical sensor readings, such as temperature and humidity, and so on. Multiple parameters can be set for the minimum and maximum values, and a notification will be sent if the measured temperature value is out of the range.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4204c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_multilevel_sensor/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_multilevel_sensor.eu" label="Z-Wave - SoC Multilevel Sensor (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Switch Multilevel Sensor application shows the ability to advertize numerical sensor readings, such as temperature and humidity, and so on. Multiple parameters can be set for the minimum and maximum values, and a notification will be sent if the measured temperature value is out of the range.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4204d-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_multilevel_sensor/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_multilevel_sensor.eu" label="Z-Wave - SoC Multilevel Sensor (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Switch Multilevel Sensor application shows the ability to advertize numerical sensor readings, such as temperature and humidity, and so on. Multiple parameters can be set for the minimum and maximum values, and a notification will be sent if the measured temperature value is out of the range.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4205a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_multilevel_sensor/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_multilevel_sensor.eu" label="Z-Wave - SoC Multilevel Sensor (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Switch Multilevel Sensor application shows the ability to advertize numerical sensor readings, such as temperature and humidity, and so on. Multiple parameters can be set for the minimum and maximum values, and a notification will be sent if the measured temperature value is out of the range.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4205b-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_multilevel_sensor/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_multilevel_sensor.eu" label="Z-Wave - SoC Multilevel Sensor (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Switch Multilevel Sensor application shows the ability to advertize numerical sensor readings, such as temperature and humidity, and so on. Multiple parameters can be set for the minimum and maximum values, and a notification will be sent if the measured temperature value is out of the range.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4210a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_multilevel_sensor/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_soc_multilevel_sensor.eu" label="Z-Wave - SoC Multilevel Sensor (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Switch Multilevel Sensor application shows the ability to advertize numerical sensor readings, such as temperature and humidity, and so on. Multiple parameters can be set for the minimum and maximum values, and a notification will be sent if the measured temperature value is out of the range.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4400c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_multilevel_sensor/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_soc_multilevel_sensor.eu" label="Z-Wave - SoC Multilevel Sensor (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave Switch Multilevel Sensor application shows the ability to advertize numerical sensor readings, such as temperature and humidity, and so on. Multiple parameters can be set for the minimum and maximum values, and a notification will be sent if the measured temperature value is out of the range.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Multilevel Sensor (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_multilevel_sensor/zwave_soc_multilevel_sensor-brd4401c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_multilevel_sensor/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_power_strip.eu_v255" label="Z-Wave - SoC Power Strip (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.
Endpoint 1 device type - generic type switch binary and specific type on/off power switch.
Endpoint 2 device type - generic type light dimmer switch and specific type light dimmer switch.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Power Strip (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd2603a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_power_strip/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_soc_power_strip.eu_v255" label="Z-Wave - SoC Power Strip (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.
Endpoint 1 device type - generic type switch binary and specific type on/off power switch.
Endpoint 2 device type - generic type light dimmer switch and specific type light dimmer switch.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Power Strip (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd2705a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_power_strip/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_power_strip.eu_v255" label="Z-Wave - SoC Power Strip (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.
Endpoint 1 device type - generic type switch binary and specific type on/off power switch.
Endpoint 2 device type - generic type light dimmer switch and specific type light dimmer switch.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Power Strip (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4204c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_power_strip/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_power_strip.eu_v255" label="Z-Wave - SoC Power Strip (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.
Endpoint 1 device type - generic type switch binary and specific type on/off power switch.
Endpoint 2 device type - generic type light dimmer switch and specific type light dimmer switch.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Power Strip (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4204d-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_power_strip/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_power_strip.eu_v255" label="Z-Wave - SoC Power Strip (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.
Endpoint 1 device type - generic type switch binary and specific type on/off power switch.
Endpoint 2 device type - generic type light dimmer switch and specific type light dimmer switch.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Power Strip (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4205a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_power_strip/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_power_strip.eu_v255" label="Z-Wave - SoC Power Strip (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.
Endpoint 1 device type - generic type switch binary and specific type on/off power switch.
Endpoint 2 device type - generic type light dimmer switch and specific type light dimmer switch.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Power Strip (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4205b-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_power_strip/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_power_strip.eu_v255" label="Z-Wave - SoC Power Strip (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.
Endpoint 1 device type - generic type switch binary and specific type on/off power switch.
Endpoint 2 device type - generic type light dimmer switch and specific type light dimmer switch.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Power Strip (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4210a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_power_strip/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_soc_power_strip.eu_v255" label="Z-Wave - SoC Power Strip (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.
Endpoint 1 device type - generic type switch binary and specific type on/off power switch.
Endpoint 2 device type - generic type light dimmer switch and specific type light dimmer switch.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Power Strip (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4400c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_power_strip/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_soc_power_strip.eu_v255" label="Z-Wave - SoC Power Strip (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.
Endpoint 1 device type - generic type switch binary and specific type on/off power switch.
Endpoint 2 device type - generic type light dimmer switch and specific type light dimmer switch.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Power Strip (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4401c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_power_strip/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_power_strip.eu" label="Z-Wave - SoC Power Strip (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.
Endpoint 1 device type - generic type switch binary and specific type on/off power switch.
Endpoint 2 device type - generic type light dimmer switch and specific type light dimmer switch.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Power Strip (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd2603a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_power_strip/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_soc_power_strip.eu" label="Z-Wave - SoC Power Strip (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.
Endpoint 1 device type - generic type switch binary and specific type on/off power switch.
Endpoint 2 device type - generic type light dimmer switch and specific type light dimmer switch.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Power Strip (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd2705a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_power_strip/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_power_strip.eu" label="Z-Wave - SoC Power Strip (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.
Endpoint 1 device type - generic type switch binary and specific type on/off power switch.
Endpoint 2 device type - generic type light dimmer switch and specific type light dimmer switch.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Power Strip (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4204c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_power_strip/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_power_strip.eu" label="Z-Wave - SoC Power Strip (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.
Endpoint 1 device type - generic type switch binary and specific type on/off power switch.
Endpoint 2 device type - generic type light dimmer switch and specific type light dimmer switch.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Power Strip (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4204d-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_power_strip/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_power_strip.eu" label="Z-Wave - SoC Power Strip (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.
Endpoint 1 device type - generic type switch binary and specific type on/off power switch.
Endpoint 2 device type - generic type light dimmer switch and specific type light dimmer switch.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Power Strip (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4205a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_power_strip/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_power_strip.eu" label="Z-Wave - SoC Power Strip (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.
Endpoint 1 device type - generic type switch binary and specific type on/off power switch.
Endpoint 2 device type - generic type light dimmer switch and specific type light dimmer switch.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Power Strip (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4205b-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_power_strip/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_power_strip.eu" label="Z-Wave - SoC Power Strip (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.
Endpoint 1 device type - generic type switch binary and specific type on/off power switch.
Endpoint 2 device type - generic type light dimmer switch and specific type light dimmer switch.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Power Strip (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4210a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_power_strip/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_soc_power_strip.eu" label="Z-Wave - SoC Power Strip (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.
Endpoint 1 device type - generic type switch binary and specific type on/off power switch.
Endpoint 2 device type - generic type light dimmer switch and specific type light dimmer switch.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Power Strip (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4400c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_power_strip/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_soc_power_strip.eu" label="Z-Wave - SoC Power Strip (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Power Strip application shows an extension block implementation used to turn on several devices that are connected to power. Examples include lights, appliances, etc.
Endpoint 1 device type - generic type switch binary and specific type on/off power switch.
Endpoint 2 device type - generic type light dimmer switch and specific type light dimmer switch.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Power Strip (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_power_strip/zwave_soc_power_strip-brd4401c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_power_strip/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_sensor_pir.eu_v255" label="Z-Wave - SoC Sensor PIR (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified passive infrared (PIR) sensor application shows a presence/movement detector implementation for controlling other devices and for sending notifications.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd2603a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_sensor_pir/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_soc_sensor_pir.eu_v255" label="Z-Wave - SoC Sensor PIR (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified passive infrared (PIR) sensor application shows a presence/movement detector implementation for controlling other devices and for sending notifications.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd2705a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_sensor_pir/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_sensor_pir.eu_v255" label="Z-Wave - SoC Sensor PIR (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified passive infrared (PIR) sensor application shows a presence/movement detector implementation for controlling other devices and for sending notifications.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4204c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_sensor_pir/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_sensor_pir.eu_v255" label="Z-Wave - SoC Sensor PIR (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified passive infrared (PIR) sensor application shows a presence/movement detector implementation for controlling other devices and for sending notifications.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4204d-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_sensor_pir/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_sensor_pir.eu_v255" label="Z-Wave - SoC Sensor PIR (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified passive infrared (PIR) sensor application shows a presence/movement detector implementation for controlling other devices and for sending notifications.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4205a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_sensor_pir/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_sensor_pir.eu_v255" label="Z-Wave - SoC Sensor PIR (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified passive infrared (PIR) sensor application shows a presence/movement detector implementation for controlling other devices and for sending notifications.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4205b-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_sensor_pir/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_sensor_pir.eu_v255" label="Z-Wave - SoC Sensor PIR (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified passive infrared (PIR) sensor application shows a presence/movement detector implementation for controlling other devices and for sending notifications.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4210a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_sensor_pir/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_soc_sensor_pir.eu_v255" label="Z-Wave - SoC Sensor PIR (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified passive infrared (PIR) sensor application shows a presence/movement detector implementation for controlling other devices and for sending notifications.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4400c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_sensor_pir/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_soc_sensor_pir.eu_v255" label="Z-Wave - SoC Sensor PIR (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified passive infrared (PIR) sensor application shows a presence/movement detector implementation for controlling other devices and for sending notifications.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4401c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_sensor_pir/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_sensor_pir.eu" label="Z-Wave - SoC Sensor PIR (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified passive infrared (PIR) sensor application shows a presence/movement detector implementation for controlling other devices and for sending notifications.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd2603a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_sensor_pir/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_soc_sensor_pir.eu" label="Z-Wave - SoC Sensor PIR (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified passive infrared (PIR) sensor application shows a presence/movement detector implementation for controlling other devices and for sending notifications.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd2705a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_sensor_pir/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_sensor_pir.eu" label="Z-Wave - SoC Sensor PIR (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified passive infrared (PIR) sensor application shows a presence/movement detector implementation for controlling other devices and for sending notifications.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4204c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_sensor_pir/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_sensor_pir.eu" label="Z-Wave - SoC Sensor PIR (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified passive infrared (PIR) sensor application shows a presence/movement detector implementation for controlling other devices and for sending notifications.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4204d-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_sensor_pir/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_sensor_pir.eu" label="Z-Wave - SoC Sensor PIR (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified passive infrared (PIR) sensor application shows a presence/movement detector implementation for controlling other devices and for sending notifications.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4205a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_sensor_pir/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_sensor_pir.eu" label="Z-Wave - SoC Sensor PIR (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified passive infrared (PIR) sensor application shows a presence/movement detector implementation for controlling other devices and for sending notifications.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4205b-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_sensor_pir/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_sensor_pir.eu" label="Z-Wave - SoC Sensor PIR (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified passive infrared (PIR) sensor application shows a presence/movement detector implementation for controlling other devices and for sending notifications.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4210a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_sensor_pir/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_soc_sensor_pir.eu" label="Z-Wave - SoC Sensor PIR (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified passive infrared (PIR) sensor application shows a presence/movement detector implementation for controlling other devices and for sending notifications.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4400c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_sensor_pir/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_soc_sensor_pir.eu" label="Z-Wave - SoC Sensor PIR (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified passive infrared (PIR) sensor application shows a presence/movement detector implementation for controlling other devices and for sending notifications.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Sensor PIR (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_sensor_pir/zwave_soc_sensor_pir-brd4401c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_sensor_pir/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_switch_on_off.eu_v255" label="Z-Wave - SoC Switch On/Off (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 [RECOMMENDED STARTER PROJECT] The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd2603a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_switch_on_off/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_soc_switch_on_off.eu_v255" label="Z-Wave - SoC Switch On/Off (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 [RECOMMENDED STARTER PROJECT] The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd2705a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_switch_on_off/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_switch_on_off.eu_v255" label="Z-Wave - SoC Switch On/Off (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 [RECOMMENDED STARTER PROJECT] The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4204c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_switch_on_off/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_switch_on_off.eu_v255" label="Z-Wave - SoC Switch On/Off (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 [RECOMMENDED STARTER PROJECT] The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4204d-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_switch_on_off/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_switch_on_off.eu_v255" label="Z-Wave - SoC Switch On/Off (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 [RECOMMENDED STARTER PROJECT] The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4205a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_switch_on_off/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_switch_on_off.eu_v255" label="Z-Wave - SoC Switch On/Off (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 [RECOMMENDED STARTER PROJECT] The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4205b-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_switch_on_off/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_switch_on_off.eu_v255" label="Z-Wave - SoC Switch On/Off (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 [RECOMMENDED STARTER PROJECT] The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4210a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_switch_on_off/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_soc_switch_on_off.eu_v255" label="Z-Wave - SoC Switch On/Off (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 [RECOMMENDED STARTER PROJECT] The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4400c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_switch_on_off/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_soc_switch_on_off.eu_v255" label="Z-Wave - SoC Switch On/Off (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 [RECOMMENDED STARTER PROJECT] The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4401c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_switch_on_off/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_switch_on_off.eu" label="Z-Wave - SoC Switch On/Off (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 [RECOMMENDED STARTER PROJECT] The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd2603a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_switch_on_off/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_soc_switch_on_off.eu" label="Z-Wave - SoC Switch On/Off (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 [RECOMMENDED STARTER PROJECT] The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd2705a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_switch_on_off/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_switch_on_off.eu" label="Z-Wave - SoC Switch On/Off (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 [RECOMMENDED STARTER PROJECT] The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4204c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_switch_on_off/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_switch_on_off.eu" label="Z-Wave - SoC Switch On/Off (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 [RECOMMENDED STARTER PROJECT] The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4204d-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_switch_on_off/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_switch_on_off.eu" label="Z-Wave - SoC Switch On/Off (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 [RECOMMENDED STARTER PROJECT] The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4205a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_switch_on_off/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_switch_on_off.eu" label="Z-Wave - SoC Switch On/Off (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 [RECOMMENDED STARTER PROJECT] The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4205b-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_switch_on_off/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_switch_on_off.eu" label="Z-Wave - SoC Switch On/Off (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 [RECOMMENDED STARTER PROJECT] The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4210a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_switch_on_off/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_soc_switch_on_off.eu" label="Z-Wave - SoC Switch On/Off (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 [RECOMMENDED STARTER PROJECT] The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4400c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_switch_on_off/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_soc_switch_on_off.eu" label="Z-Wave - SoC Switch On/Off (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 [RECOMMENDED STARTER PROJECT] The Z-Wave certified Switch On/Off application shows a switch implementation that turns on any device that is connected to power. Examples include lights, appliances, and so on.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Switch On/Off (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_switch_on_off/zwave_soc_switch_on_off-brd4401c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_switch_on_off/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_wall_controller.eu_v255" label="Z-Wave - SoC Wall Controller (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controllers and wall-mounted AV controllers.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Wall Controller (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd2603a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_wall_controller/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_soc_wall_controller.eu_v255" label="Z-Wave - SoC Wall Controller (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controllers and wall-mounted AV controllers.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Wall Controller (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd2705a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_wall_controller/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_wall_controller.eu_v255" label="Z-Wave - SoC Wall Controller (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controllers and wall-mounted AV controllers.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Wall Controller (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4204c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_wall_controller/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_wall_controller.eu_v255" label="Z-Wave - SoC Wall Controller (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controllers and wall-mounted AV controllers.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Wall Controller (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4204d-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_wall_controller/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_wall_controller.eu_v255" label="Z-Wave - SoC Wall Controller (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controllers and wall-mounted AV controllers.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Wall Controller (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4205a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_wall_controller/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_wall_controller.eu_v255" label="Z-Wave - SoC Wall Controller (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controllers and wall-mounted AV controllers.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Wall Controller (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4205b-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_wall_controller/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_wall_controller.eu_v255" label="Z-Wave - SoC Wall Controller (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controllers and wall-mounted AV controllers.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Wall Controller (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4210a-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_wall_controller/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_soc_wall_controller.eu_v255" label="Z-Wave - SoC Wall Controller (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controllers and wall-mounted AV controllers.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Wall Controller (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4400c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_wall_controller/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_soc_wall_controller.eu_v255" label="Z-Wave - SoC Wall Controller (Default Region v255)">
    <model:description>This variant of demo is created for testing OTA update. The firmware is the same as the default variant, except the application version is set to '255.0.0'. IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controllers and wall-mounted AV controllers.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Wall Controller (Default Region v255)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4401c-eu_v255.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_wall_controller/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4401c.s37"/>
  </demo>
  <demo name="brd2603a.demo.zwave_soc_wall_controller.eu" label="Z-Wave - SoC Wall Controller (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controllers and wall-mounted AV controllers.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Wall Controller (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd2603a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd2603a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_wall_controller/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2603a.s37"/>
  </demo>
  <demo name="brd2705a.demo.zwave_soc_wall_controller.eu" label="Z-Wave - SoC Wall Controller (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controllers and wall-mounted AV controllers.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Wall Controller (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im48.*"/>
    <property key="core.boardCompatibility" value="brd2705a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd2705a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_wall_controller/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd2705a.s37"/>
  </demo>
  <demo name="brd4204c.demo.zwave_soc_wall_controller.eu" label="Z-Wave - SoC Wall Controller (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controllers and wall-mounted AV controllers.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Wall Controller (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4204c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_wall_controller/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204c.s37"/>
  </demo>
  <demo name="brd4204d.demo.zwave_soc_wall_controller.eu" label="Z-Wave - SoC Wall Controller (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controllers and wall-mounted AV controllers.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Wall Controller (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b010f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4204d"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4204d-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_wall_controller/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4204d.s37"/>
  </demo>
  <demo name="brd4205a.demo.zwave_soc_wall_controller.eu" label="Z-Wave - SoC Wall Controller (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controllers and wall-mounted AV controllers.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Wall Controller (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sa27hnn.*"/>
    <property key="core.boardCompatibility" value="brd4205a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4205a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_wall_controller/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205a.s37"/>
  </demo>
  <demo name="brd4205b.demo.zwave_soc_wall_controller.eu" label="Z-Wave - SoC Wall Controller (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controllers and wall-mounted AV controllers.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Wall Controller (Default Region)"/>
    <property key="core.partCompatibility" value=".*zgm230sb27hgn.*"/>
    <property key="core.boardCompatibility" value="brd4205b"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4205b-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_wall_controller/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4205b.s37"/>
  </demo>
  <demo name="brd4210a.demo.zwave_soc_wall_controller.eu" label="Z-Wave - SoC Wall Controller (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controllers and wall-mounted AV controllers.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Wall Controller (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg23b020f512im48.*"/>
    <property key="core.boardCompatibility" value="brd4210a"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4210a-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_wall_controller/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4210a.s37"/>
  </demo>
  <demo name="brd4400c.demo.zwave_soc_wall_controller.eu" label="Z-Wave - SoC Wall Controller (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controllers and wall-mounted AV controllers.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Wall Controller (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b312f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4400c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4400c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_wall_controller/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4400c.s37"/>
  </demo>
  <demo name="brd4401c.demo.zwave_soc_wall_controller.eu" label="Z-Wave - SoC Wall Controller (Default Region)">
    <model:description>IMPORTANT: The default region for this firmware is EU. This region is only applied by SoC applications if the dedicated MFG_ZWAVE_COUNTRY_FREQ token is empty (0xFF) when the application first starts up. If another region is needed, then the MFG_ZWAVE_COUNTRY_FREQ token must be set with Simplicity Commander using the following command: `commander flash --tokengroup znet --token MFG_ZWAVE_COUNTRY_FREQ:{region_hex}`, where the {region_hex} is the desired region. The available regions can be found in the `zpal_radio.h` file, such as REGION_EU.
 The Z-Wave certified Wall Controller application shows a push-button switch panel implementation to control devices in the Z-Wave network from push buttons (physical or virtual) on a device that is meant to be mounted on a wall. Examples include scene and zone controllers and wall-mounted AV controllers.
</model:description>
    <property key="demos.blurb" value="Z-Wave - SoC Wall Controller (Default Region)"/>
    <property key="core.partCompatibility" value=".*efr32zg28b322f1024im68.*"/>
    <property key="core.boardCompatibility" value="brd4401c"/>
    <property key="demos.imageFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/protocol/z-wave/demos/zwave_soc_wall_controller/zwave_soc_wall_controller-brd4401c-eu.hex"/>
    <property key="core.readmeFiles" value="Apps/zwave_soc_wall_controller/README.md"/>
    <property key="filters" value="Device\ Type|SoC Project\ Difficulty|Beginner Wireless\ Technology|Z-Wave"/>
    <property key="core.quality" value="PRODUCTION"/>
    <property key="demos.encryptionKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_encrypt.key"/>
    <property key="demos.signingKey" value="platform/SiliconLabs/PAL/BootLoader/sample-keys/sample_sign.key-tokens.txt"/>
    <property key="demos.bootloaderFile" value="asset://com.silabs.sdk.stack.sisdk_2024.12.0/platform/bootloader/demos/bootloader-storage-internal-single-zwave-ota/bootloader-storage-internal-single-zwave-ota-brd4401c.s37"/>
  </demo>
</demos>
